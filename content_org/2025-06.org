#+startup: content logdone inlneimages

#+hugo_base_dir: ../
#+hugo_section: posts/2025/06
#+author: derui

* ✨ 最近のAIを使ったProgrammingについて :Programming:
CLOSED: [2025-06-22 日 16:09]
:PROPERTIES:
:EXPORT_FILE_NAME: recent-programming
:END:
すっかり初夏の感じになってきました。半年すぎるのが早すぎます。

すっかり間が空いてしまいましたが、今回は最近のお仕事で使ってるものとかを簡単に書いてみようかと思います。

#+html: <!--more-->

** 最近使っているもの
すっかりLLMが開発現場に入ってきました。取り敢えず今利用しているものを上げていってみます。Editor？Emacsですがなにか？

- GitHub Copilot
- [[https://aider.chat/][aider]]
  - coding toolです
  - Vertex AIを合わせて利用しています
- Devin
  - 会社でお試しで利用しています
- [[https://aider.chat/][cline]]
  - 社内のデザインシステム用のMCP serverの検討で使いました


周辺を見ていると、Cline/Roo Code/Copilotといったものを利用しているのが大半ですね。ただ、私は業務でもaiderの利用が95%くらいです。

** 各toolの感想

*** Copilot
LLMを利用した開発を一気に広げたものですね。日常のcodingで利用していますが、 *コメントの生成に使う* というのが最近の流れです。Chat/Edit/Agentはほぼ利用していないです。

*** Devin
最近利用していますが、いかにつきっきりにならないようにするか？か、 *いかに平行利用するか* が重要だと思いました。Agent的にやらせるとすると、実装するのとそう変わらないrequirementsの作成が必要になる印象です。

よく言われる *手の速いジュニア* がよくわかります。とりあえずcompileが通ってないのにできました！っていうのはやめような？

*** Cline
現状最も利用されていそうなAgantic tool・・・だと思います。ただ、そもそもVS Codeを利用していないので、実際の使用感は正直わからんです。Clineを使ったのはシンプルな理由で、 *みんな使っていてMCPが使っている* からです。

#+begin_quote
社内は圧倒的なVS Code比率です。TypeScriptもEmacsなのは片手で数えられるんではないかしら。
#+end_quote

*** aider
現状トップランクで利用しています。今回挙げた中だとPythonで開発されている唯一のtoolです。特徴としては

- Agentではなく *Pair programming*
  - auto-commitやco-authorといったgitにガンガンcommitしていく形が前提です
- *実行毎にcostが見える*
  - 実はこの特徴があるツールはほぼないです。仕事で利用するでも、個人で利用するでも、コスト感覚が掴めるのは重要です
- 余計な編集を回避する仕組みがある
  - 明示的に修正するfileを指定することで、contextを理解している場合の効率が段違いです
- *CLIとして利用できる*
  - 80%の精度でいいものを、 *全体を通して* 80%の精度で作ることができます

     
といった、 *コードコンテキストがわかっている場合* に最速を出せるようになっています。CLIで利用できるtoolはcodexくらいしかなく、そういった点でも有用です。

** 仕事でのプログラミングと趣味での利用
現状、仕事ではバリバリ利用していますが、趣味ではあんまり利用していません。これはLocal LLMの限界とかもありますが、自分の経験値を貯める為でもあります。LLMの性質上確率なのは変わりませんし、どういった場面や状況でどういったものを利用するか、といった良し悪しの判断、審美眼的なものは、自身の経験も重要なfactorだと思ってます。

そういう意味では、まだ自分の仕事はあるな、とは思いつつ、これからがまた色々と不透明だな、と思う今日この頃です。


実家の方でできる仕事探そうかな :thinking:

* comment Local Variables                                           :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:

